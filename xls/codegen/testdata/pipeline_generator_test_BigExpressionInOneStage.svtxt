module x_plus_y_plus_z(
  input wire clk,
  input wire [31:0] a,
  input wire [31:0] b,
  input wire [31:0] c,
  input wire [31:0] d,
  output wire [31:0] out
);
  // ===== Pipe stage 0:

  // Registers for pipe stage 0:
  reg [31:0] p0_a;
  reg [31:0] p0_b;
  reg [31:0] p0_c;
  reg [31:0] p0_d;
  always_ff @ (posedge clk) begin
    p0_a <= a;
    p0_b <= b;
    p0_c <= c;
    p0_d <= d;
  end

  // ===== Pipe stage 1:
  wire [31:0] add_24;
  wire [31:0] xor_26;
  wire [31:0] add_27;
  wire [31:0] sub_28;
  wire [31:0] add_29;
  wire [31:0] sub_30;
  assign add_24 = p0_a + p0_b;
  assign xor_26 = p0_a ^ add_24;
  assign add_27 = ~add_24 + p0_c;
  assign sub_28 = xor_26 - add_27;
  assign add_29 = p0_d + xor_26;
  assign sub_30 = sub_28 - add_29;

  // Registers for pipe stage 1:
  reg [31:0] p1_sub_30;
  always_ff @ (posedge clk) begin
    p1_sub_30 <= sub_30;
  end
  assign out = p1_sub_30;
endmodule
