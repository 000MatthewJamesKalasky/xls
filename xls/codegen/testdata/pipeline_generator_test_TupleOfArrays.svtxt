module TupleOfArrays(
  input wire clk,
  input wire [55:0] x,
  output wire [55:0] out
);
  // ===== Pipe stage 0:

  // Registers for pipe stage 0:
  reg [55:0] p0_x;
  always_ff @ (posedge clk) begin
    p0_x <= x;
  end

  // ===== Pipe stage 1:

  // Registers for pipe stage 1:
  reg [55:0] p1_x;
  always_ff @ (posedge clk) begin
    p1_x <= p0_x;
  end

  // ===== Pipe stage 2:
  wire [15:0] tuple_index_10[2];
  wire [7:0] tuple_index_11[3];
  assign tuple_index_10[0] = p1_x[15:0];
  assign tuple_index_10[1] = p1_x[31:16];
  assign tuple_index_11[0] = p1_x[39:32];
  assign tuple_index_11[1] = p1_x[47:40];
  assign tuple_index_11[2] = p1_x[55:48];

  // Registers for pipe stage 2:
  reg [15:0] p2_tuple_index_10[2];
  reg [7:0] p2_tuple_index_11[3];
  always_ff @ (posedge clk) begin
    p2_tuple_index_10 <= tuple_index_10;
    p2_tuple_index_11 <= tuple_index_11;
  end

  // ===== Pipe stage 3:
  wire [55:0] tuple_16;
  assign tuple_16 = {{p2_tuple_index_10[1], p2_tuple_index_10[0]}, {p2_tuple_index_11[2], p2_tuple_index_11[1], p2_tuple_index_11[0]}};

  // Registers for pipe stage 3:
  reg [55:0] p3_tuple_16;
  always_ff @ (posedge clk) begin
    p3_tuple_16 <= tuple_16;
  end
  assign out = p3_tuple_16;
endmodule
