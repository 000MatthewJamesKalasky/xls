package test_module

fn __test_module__main(__token: token, __activated: bits[1], x: bits[32]) -> (token, bits[32]) {
  literal.4: bits[32] = literal(value=0, id=4)
  eq.5: bits[1] = eq(x, literal.4, id=5)
  and.6: bits[1] = and(__activated, eq.5, id=6)
  not.7: bits[1] = not(and.6, id=7)
  assert.8: token = assert(__token, not.7, message="Assertion failure via fail! @ test_module.x:3:8-3:11", id=8)
  identity.9: bits[32] = identity(x, id=9)
  after_all.11: token = after_all(assert.8, id=11)
  sel.10: bits[32] = sel(eq.5, cases=[x, identity.9], id=10)
  ret tuple.12: (token, bits[32]) = tuple(after_all.11, sel.10, id=12)
}
