package test_module

fn ____test_module__main_counted_for_0_body(i: bits[32], __loop_carry: (bits[32], bits[32])) -> (bits[32], bits[32]) {
  literal.7: bits[1] = literal(value=1, id=7)
  literal.9: bits[1] = literal(value=1, id=9)
  tuple_index.8: bits[32] = tuple_index(__loop_carry, index=0, id=8)
  tuple_index.11: bits[32] = tuple_index(__loop_carry, index=1, id=11)
  and.10: bits[1] = and(literal.7, literal.9, id=10)
  literal.12: bits[1] = literal(value=1, id=12)
  tuple.14: (bits[32], bits[32]) = tuple(tuple_index.8, tuple_index.11, id=14)
  and.13: bits[1] = and(and.10, literal.12, id=13)
  ret identity.15: (bits[32], bits[32]) = identity(tuple.14, id=15)
}

fn __test_module__main(x: bits[32]) -> (bits[32], bits[32]) {
  literal.2: bits[32] = literal(value=0, id=2)
  literal.3: bits[32] = literal(value=0, id=3)
  tuple.4: (bits[32], bits[32]) = tuple(literal.2, literal.3, id=4)
  ret counted_for.16: (bits[32], bits[32]) = counted_for(tuple.4, trip_count=1, stride=1, body=____test_module__main_counted_for_0_body, id=16)
}
