syntax = "proto2";

package xls.noc;

// Custom Network Config Builder Options for the Ring topology
message RingNetworkConfigOptions {}

// Custom Network Config Builder Options for the Mesh topology
message MeshNetworkConfigOptions {
  // The number of rows in the network
  optional int64 num_rows = 1;
  // The number of columns in the network
  optional int64 num_columns = 2;
  // Attribute generating connections between the routers
  // on the perimeter of the same row.
  // If true, connections between the routers on the perimeter of the same row
  // are generated. Otherwise, these connections are not generated.
  optional bool row_loopback = 3;
  // Attribute generating connections between the routers
  // on the perimeter of the same column.
  // If true, connections between the routers on the perimeter of the same
  // column are generated. Otherwise, these connections are not generated.
  optional bool column_loopback = 4;
  // When row_loopback and column_loopback are enabled, the topology defines
  // the Torus topology.
}

// Custom Network Config Builder Options for the Tree topology (unidirectional)
message TreeNetworkConfigOptions {
  // number of input ports for each router
  optional int64 input_radix = 1;
  // number of output ports for each router
  optional int64 output_radix = 2;
}

// Common Network Config Builder Options
message CommonNetworkConfigBuilderOptions {
  optional string topology = 1;
  // The number of endpoint send ports
  optional int64 num_send_ports = 2;
  // The number of endpoint receive ports
  optional int64 num_recv_ports = 3;
  optional int64 flit_data_width = 4;
}

message NetworkConfigBuilderOptions {
  optional CommonNetworkConfigBuilderOptions options = 1;
  oneof CustomNetworkConfigBuilderOptions {
    RingNetworkConfigOptions ring = 2;
    MeshNetworkConfigOptions mesh = 3;
    TreeNetworkConfigOptions tree = 4;
  }
}
