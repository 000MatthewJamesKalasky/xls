syntax = "proto2";

// The proto file contains components used for describing a network
// configuration. These components will be serialized on disks for use by other
// NoC generation libraries and tools.

package xls.noc;

// A Connection is a link between two ports: a source port and a sink port.
message ConnectionConfigProto {
  // The name of the source port
  optional string source_port_name = 1;
  // The name of the sink port
  optional string sink_port_name = 2;
  // TODO(vmirian): add interface type for flow control between ports (e.g.
  // FIFO, Credit Based), note the interface should remain unchanged the
  // implementation for the router port changes
  // TODO(vmirian): add flow control depth/FIFO depth
  // TODO(vmirian): add phit data width for connection
}

// A Port Configuration
message PortConfigProto {
  optional string name = 1;
  optional uint64 id = 2;
  // TODO(vmirian): add virtual channel (VC) support for the port
}

// A Router Configuration
message RouterConfigProto {
  optional string name = 1;
  repeated PortConfigProto input_ports = 2;
  repeated PortConfigProto output_ports = 3;
  // The routing table defines the route to an endpoint's receive port
  // from the current router.
  // Routing Table format:
  // source_port_name: The port name of an endpoint's receive port.
  // In other words, a port name from the network recv_ports port list
  // sink_port_name: The port name of an output port of the current router.
  repeated ConnectionConfigProto routing_table = 4;
}

// A Network Configuration
message NetworkConfigProto {
  optional string name = 1;
  optional uint64 flit_data_width = 2;
  repeated PortConfigProto send_ports = 3;
  repeated PortConfigProto recv_ports = 4;
  repeated RouterConfigProto routers = 5;
  // source_port_name: name of source port
  // sink_port_name: name of sink port
  repeated ConnectionConfigProto connections = 6;
}